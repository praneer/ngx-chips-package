{"version":3,"file":"ngx-chips.js","sources":["ng://ngx-chips/core/pipes/highlight.pipe.ts","ng://ngx-chips/core/constants/index.ts","ng://ngx-chips/core/providers/drag-provider.ts","ng://ngx-chips/defaults.ts","ng://ngx-chips/core/providers/options-provider.ts","ng://ngx-chips/core/accessor.ts","ng://ngx-chips/core/helpers/listen.ts","ng://ngx-chips/components/tag-input-form/tag-input-form.component.ts","ng://ngx-chips/components/tag/tag-ripple.component.ts","ng://ngx-chips/components/tag/tag.component.ts","ng://ngx-chips/components/tag-input/animations.ts","ng://ngx-chips/components/dropdown/tag-input-dropdown.component.ts","ng://ngx-chips/components/tag-input/tag-input.ts","ng://ngx-chips/components/icon/icon.ts","ng://ngx-chips/tag-input.module.ts","ng://ngx-chips/ngx-chips.ts"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\r\n\r\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\r\n@Pipe({\r\n    name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n    /**\r\n     * @name transform\r\n     * @param value {string}\r\n     * @param arg {string}\r\n     */\r\n    public transform(value: string, arg: string): string {\r\n        if (!arg.trim()) {\r\n            return value;\r\n        }\r\n\r\n        try {\r\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\r\n            return value.replace(regex, '<b>$1</b>');\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","/*\r\n** constants and default values for <tag-input>\r\n */\r\n\r\nexport const PLACEHOLDER = '+ Tag';\r\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\r\nexport const KEYDOWN = 'keydown';\r\nexport const KEYUP = 'keyup';\r\nexport const FOCUS = 'focus';\r\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\r\n\r\nexport const ACTIONS_KEYS = {\r\n    DELETE: 'DELETE',\r\n    SWITCH_PREV: 'SWITCH_PREV',\r\n    SWITCH_NEXT: 'SWITCH_NEXT',\r\n    TAB: 'TAB'\r\n};\r\n\r\nexport const KEY_PRESS_ACTIONS = {\r\n    8: ACTIONS_KEYS.DELETE,\r\n    46: ACTIONS_KEYS.DELETE,\r\n    37: ACTIONS_KEYS.SWITCH_PREV,\r\n    39: ACTIONS_KEYS.SWITCH_NEXT,\r\n    9: ACTIONS_KEYS.TAB\r\n};\r\n\r\nexport const DRAG_AND_DROP_KEY = 'Text';\r\nexport const NEXT = 'NEXT';\r\nexport const PREV = 'PREV';\r\n\r\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\r\nimport { TagModel } from '../accessor';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport declare interface DraggedTag {\r\n    index: number;\r\n    tag: TagModel;\r\n    zone: string;\r\n}\r\n\r\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\r\n\r\nexport declare interface State {\r\n    dragging: boolean;\r\n    dropping: boolean;\r\n    index: number | undefined;\r\n}\r\n\r\nexport declare type StateProperty = keyof State;\r\n\r\n@Injectable()\r\nexport class DragProvider {\r\n    public sender: TagInputComponent;\r\n    public receiver: TagInputComponent;\r\n\r\n    public state: State = {\r\n        dragging: false,\r\n        dropping: false,\r\n        index: undefined\r\n    };\r\n\r\n    /**\r\n     * @name setDraggedItem\r\n     * @param event\r\n     * @param tag\r\n     */\r\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\r\n        if (event && event.dataTransfer) {\r\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getDraggedItem\r\n     * @param event\r\n     */\r\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\r\n        if (event && event.dataTransfer) {\r\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\r\n            try {\r\n                return JSON.parse(data) as DraggedTag;\r\n            } catch {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name setSender\r\n     * @param sender\r\n     */\r\n    public setSender(sender: TagInputComponent): void {\r\n        this.sender = sender;\r\n    }\r\n\r\n    /**\r\n     * @name setReceiver\r\n     * @param receiver\r\n     */\r\n    public setReceiver(receiver: TagInputComponent): void {\r\n        this.receiver = receiver;\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param tag\r\n     * @param indexDragged\r\n     * @param indexDropped\r\n     */\r\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\r\n        this.onDragEnd();\r\n\r\n        this.sender.onRemoveRequested(tag, indexDragged);\r\n        this.receiver.onAddingRequested(false, tag, indexDropped);\r\n    }\r\n\r\n    /**\r\n     * @name setState\r\n     * @param state\r\n     */\r\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\r\n        this.state = { ...this.state, ...state };\r\n    }\r\n\r\n    /**\r\n     * @name getState\r\n     * @param key\r\n     */\r\n    public getState(key?: StateProperty): State | State[StateProperty] {\r\n        return key ? this.state[key] : this.state;\r\n    }\r\n\r\n    /**\r\n     * @name onDragEnd\r\n     */\r\n    public onDragEnd(): void {\r\n        this.setState({\r\n            dragging: false,\r\n            dropping: false,\r\n            index: undefined\r\n        });\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\r\n\r\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagModel } from './core/accessor';\r\n\r\nexport interface TagInputOptions {\r\n    separatorKeys: string[];\r\n    separatorKeyCodes: number[];\r\n    maxItems: number;\r\n    placeholder: string;\r\n    secondaryPlaceholder: string;\r\n    validators: ValidatorFn[];\r\n    asyncValidators: AsyncValidatorFn[];\r\n    onlyFromAutocomplete: boolean;\r\n    errorMessages: { [key: string]: string; };\r\n    theme: '';\r\n    onTextChangeDebounce: number;\r\n    inputId: string | null;\r\n    inputClass: string;\r\n    clearOnBlur: boolean;\r\n    hideForm: boolean;\r\n    addOnBlur: boolean;\r\n    addOnPaste: boolean;\r\n    pasteSplitPattern: string | RegExp;\r\n    blinkIfDupe: boolean;\r\n    removable: boolean;\r\n    editable: boolean;\r\n    allowDupes: boolean;\r\n    modelAsStrings: boolean;\r\n    trimTags: boolean;\r\n    ripple: boolean;\r\n    tabIndex: string;\r\n    disable: boolean;\r\n    dragZone: string;\r\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\r\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    animationDuration: {\r\n        enter: string,\r\n        leave: string\r\n    };\r\n}\r\n\r\nexport interface TagInputDropdownOptions {\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    appendToBody: boolean;\r\n    offset: string;\r\n    focusFirstElement: boolean;\r\n    showDropdownIfEmpty: boolean;\r\n    minimumTextLength: number;\r\n    limitItemsTo: number;\r\n    keepOpen: boolean;\r\n    zIndex: number;\r\n    dynamicUpdate: boolean;\r\n    matchingFn: (value: string, target: TagModel) => boolean;\r\n}\r\n\r\nexport const defaults = {\r\n    tagInput: <TagInputOptions>{\r\n        separatorKeys: [],\r\n        separatorKeyCodes: [],\r\n        maxItems: Infinity,\r\n        placeholder: PLACEHOLDER,\r\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\r\n        validators: [],\r\n        asyncValidators: [],\r\n        onlyFromAutocomplete: false,\r\n        errorMessages: {},\r\n        theme: '',\r\n        onTextChangeDebounce: 250,\r\n        inputId: null,\r\n        inputClass: '',\r\n        clearOnBlur: false,\r\n        hideForm: false,\r\n        addOnBlur: false,\r\n        addOnPaste: false,\r\n        pasteSplitPattern: ',',\r\n        blinkIfDupe: true,\r\n        removable: true,\r\n        editable: false,\r\n        allowDupes: false,\r\n        modelAsStrings: false,\r\n        trimTags: true,\r\n        ripple: true,\r\n        tabIndex: '',\r\n        disable: false,\r\n        dragZone: '',\r\n        onRemoving: undefined,\r\n        onAdding: undefined,\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        animationDuration: {\r\n            enter: '250ms',\r\n            leave: '150ms'\r\n        }\r\n    },\r\n    dropdown: <TagInputDropdownOptions>{\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        appendToBody: true,\r\n        offset: '50 0',\r\n        focusFirstElement: false,\r\n        showDropdownIfEmpty: false,\r\n        minimumTextLength: 1,\r\n        limitItemsTo: Infinity,\r\n        keepOpen: true,\r\n        dynamicUpdate: true,\r\n        zIndex: 1000,\r\n        matchingFn\r\n    }\r\n};\r\n\r\n/**\r\n * @name matchingFn\r\n * @param this\r\n * @param value\r\n * @param target\r\n */\r\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\r\n    const targetValue = target[this.displayBy].toString();\r\n\r\n    return targetValue && targetValue\r\n        .toLowerCase()\r\n        .indexOf(value.toLowerCase()) >= 0;\r\n}\r\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\r\n\r\nexport type Options = {\r\n    tagInput?: {\r\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\r\n    };\r\n    dropdown?: {\r\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\r\n    }\r\n};\r\n\r\nexport class OptionsProvider {\r\n    public static defaults = defaults;\r\n\r\n    public setOptions(options: Options): void {\r\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\r\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\r\n    }\r\n}\r\n\r\nexport { TagInputDropdownOptions, TagInputOptions };\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { Input } from '@angular/core';\r\nimport { OptionsProvider } from './providers/options-provider';\r\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\r\n\r\nexport class TagModelClass {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type TagModel = string | TagModelClass;\r\n\r\nexport function isObject(obj: any): boolean {\r\n    return obj === Object(obj);\r\n}\r\n\r\nexport class TagInputAccessor implements ControlValueAccessor {\r\n    private _items: TagModel[] = [];\r\n    private _onTouchedCallback: () => void;\r\n    private _onChangeCallback: (items: TagModel[]) => void;\r\n\r\n    public dropdown: TagInputDropdown;\r\n\r\n    /**\r\n     * @name displayBy\r\n     */\r\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\r\n\r\n    /**\r\n     * @name identifyBy\r\n     */\r\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\r\n\r\n    public get items(): TagModel[] {\r\n        return this._items;\r\n    }\r\n\r\n    public set items(items: TagModel[]) {\r\n        this._items = items;\r\n        this._onChangeCallback(this._items);\r\n    }\r\n\r\n    public onTouched() {\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(items: any[]) {\r\n        this._items = items || [];\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    /**\r\n     * @name getItemValue\r\n     * @param item\r\n     * @param fromDropdown\r\n     */\r\n    public getItemValue(item: TagModel, fromDropdown = false): string {\r\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\r\n        return isObject(item) ? item[property] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemDisplay\r\n     * @param item\r\n     * @param fromDropdown\r\n     */\r\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\r\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\r\n        return isObject(item) ? item[property] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemsWithout\r\n     * @param index\r\n     */\r\n    protected getItemsWithout(index: number): TagModel[] {\r\n        return this.items.filter((item, position) => position !== index);\r\n    }\r\n}\r\n","\r\n/**\r\n * @name listen\r\n * @param listenerType\r\n * @param action\r\n * @param condition\r\n */\r\nexport function listen(listenerType: string, action: () => any, condition = true): void {\r\n    // if the event provided does not exist, throw an error\r\n    if (!this.listeners.hasOwnProperty(listenerType)) {\r\n        throw new Error('The event entered may be wrong');\r\n    }\r\n\r\n    // if a condition is present and is false, exit early\r\n    if (!condition) {\r\n        return;\r\n    }\r\n\r\n    // fire listener\r\n    this.listeners[listenerType].push(action);\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'tag-input-form',\r\n    styleUrls: ['./tag-input-form.style.scss'],\r\n    templateUrl: './tag-input-form.template.html'\r\n})\r\nexport class TagInputForm implements OnInit, OnChanges {\r\n    /**\r\n     * @name onSubmit\r\n     */\r\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onBlur\r\n     */\r\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onFocus\r\n     */\r\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeyup\r\n     */\r\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeydown\r\n     */\r\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name inputTextChange\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    // inputs\r\n\r\n    /**\r\n     * @name placeholder\r\n     */\r\n    @Input() public placeholder: string;\r\n\r\n    /**\r\n     * @name validators\r\n     */\r\n    @Input() public validators: ValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name inputId\r\n     */\r\n    @Input() public inputId: string;\r\n\r\n    /**\r\n     * @name inputClass\r\n     */\r\n    @Input() public inputClass: string;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     */\r\n    @Input() public tabindex = '';\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input() public disabled = false;\r\n\r\n    /**\r\n     * @name input\r\n     */\r\n    @ViewChild('input', { static: false }) public input;\r\n\r\n    /**\r\n     * @name form\r\n     */\r\n    public form: FormGroup;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input()\r\n    public get inputText(): string {\r\n        return this.item.value;\r\n    }\r\n\r\n    private _inputText: string;\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text {string}\r\n     */\r\n    public set inputText(text: string) {\r\n        if ( this._inputText != text ) {\r\n            this._inputText = text;\r\n            this.item.setValue(text);\r\n            this.inputTextChange.emit(text);\r\n        }\r\n    }\r\n\r\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\r\n\r\n    ngOnInit() {\r\n        this.item.setValidators(this.validators);\r\n        this.item.setAsyncValidators(this.asyncValidators);\r\n\r\n        // creating form\r\n        this.form = new FormGroup({\r\n            item: this.item\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.disabled && !changes.disabled.firstChange) {\r\n            if (changes.disabled.currentValue) {\r\n                this.form.controls['item'].disable();\r\n            } else {\r\n                this.form.controls['item'].enable();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name value\r\n     */\r\n    public get value(): FormControl {\r\n        return this.form.get('item') as FormControl;\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     */\r\n    public isInputFocused(): boolean {\r\n        const doc = typeof document !== 'undefined' ? document : undefined;\r\n        return doc ? doc.activeElement === this.input.nativeElement : false;\r\n    }\r\n\r\n    /**\r\n     * @name getErrorMessages\r\n     * @param messages\r\n     */\r\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\r\n        return Object.keys(messages)\r\n            .filter(err => this.value.hasError(err))\r\n            .map(err => messages[err]);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     */\r\n    public hasErrors(): boolean {\r\n        const { dirty, value, valid } = this.form;\r\n        return dirty && value.item && !valid;\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.input.nativeElement.focus();\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.input.nativeElement.blur();\r\n    }\r\n\r\n    /**\r\n     * @name getElementPosition\r\n     */\r\n    public getElementPosition(): ClientRect {\r\n        return this.input.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    /**\r\n     * - removes input from the component\r\n     * @name destroy\r\n     */\r\n    public destroy(): void {\r\n        const input = this.input.nativeElement;\r\n        input.parentElement.removeChild(input);\r\n    }\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     * @param $event\r\n     */\r\n    public onKeyDown($event) {\r\n        if ($event.key === 'Enter') {\r\n            this.submit($event);\r\n        } else {\r\n          return this.onKeydown.emit($event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onKeyUp\r\n     * @param $event\r\n     */\r\n    public onKeyUp($event) {\r\n        this.inputText = this.value.value;\r\n        return this.onKeyup.emit($event);\r\n    }\r\n\r\n    /**\r\n     * @name submit\r\n     */\r\n    public submit($event: any): void {\r\n        $event.preventDefault();\r\n        this.onSubmit.emit($event);\r\n        this.form.reset();\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n\r\nimport {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'tag-ripple',\r\n    styles: [`\r\n        :host {\r\n            width: 100%;\r\n            height: 100%;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n        }\r\n\r\n        .tag-ripple {\r\n            background: rgba(0, 0, 0, 0.1);\r\n            top: 50%;\r\n            left: 50%;\r\n            height: 100%;\r\n            transform: translate(-50%, -50%);\r\n            position: absolute;\r\n        }\r\n    `],\r\n    template: `\r\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\r\n    `,\r\n    animations: [\r\n        trigger('ink', [\r\n            state('none', style({width: 0, opacity: 0})),\r\n            transition('none => clicked', [\r\n                animate(300, keyframes([\r\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\r\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\r\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\r\n                ]))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class TagRipple {\r\n    @Input() public state = 'none';\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    TemplateRef,\r\n    ElementRef,\r\n    HostListener,\r\n    HostBinding,\r\n    ViewChild,\r\n    ChangeDetectorRef,\r\n    Renderer2\r\n} from '@angular/core';\r\n\r\nimport { TagModel } from '../../core/accessor';\r\nimport { TagRipple } from '../tag/tag-ripple.component';\r\nimport { EventLike } from '../../core/helpers/event-like';\r\n\r\n// mocking navigator\r\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\r\n    userAgent: 'Chrome',\r\n    vendor: 'Google Inc'\r\n};\r\n\r\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n@Component({\r\n    selector: 'tag',\r\n    templateUrl: './tag.template.html',\r\n    styleUrls: ['./tag-component.style.scss']\r\n})\r\nexport class TagComponent {\r\n    /**\r\n     * @name model {TagModel}\r\n     */\r\n    @Input()\r\n    public model: TagModel;\r\n\r\n    /**\r\n     * @name removable {boolean}\r\n     */\r\n    @Input()\r\n    public removable: boolean;\r\n\r\n    /**\r\n     * @name editable {boolean}\r\n     */\r\n    @Input()\r\n    public editable: boolean;\r\n\r\n    /**\r\n     * @name template {TemplateRef<any>}\r\n     */\r\n    @Input()\r\n    public template: TemplateRef<any>;\r\n\r\n    /**\r\n     * @name displayBy {string}\r\n     */\r\n    @Input()\r\n    public displayBy: string;\r\n\r\n    /**\r\n     * @name identifyBy {string}\r\n     */\r\n    @Input()\r\n    public identifyBy: string;\r\n\r\n    /**\r\n     * @name index {number}\r\n     */\r\n    @Input()\r\n    public index: number;\r\n\r\n    /**\r\n     * @name hasRipple\r\n     */\r\n    @Input()\r\n    public hasRipple: boolean;\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input()\r\n    public disabled = false;\r\n\r\n    /**\r\n     * @name canAddTag\r\n     */\r\n    @Input()\r\n    public canAddTag: (tag: TagModel) => boolean;\r\n\r\n    /**\r\n     * @name onSelect\r\n     */\r\n    @Output()\r\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     */\r\n    @Output()\r\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onBlur\r\n     */\r\n    @Output()\r\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     */\r\n    @Output()\r\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * @name onTagEdited\r\n     */\r\n    @Output()\r\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name readonly {boolean}\r\n     */\r\n    public get readonly(): boolean {\r\n        return typeof this.model !== 'string' && this.model.readonly === true;\r\n    }\r\n\r\n    /**\r\n     * @name editing\r\n     */\r\n    public editing = false;\r\n\r\n    /**\r\n     * @name moving\r\n     */\r\n    @HostBinding('class.moving')\r\n    public moving: boolean;\r\n\r\n    /**\r\n     * @name rippleState\r\n     */\r\n    public rippleState = 'none';\r\n\r\n    /**\r\n     * @name ripple {TagRipple}\r\n     */\r\n    @ViewChild(TagRipple, { static: false })\r\n    public ripple: TagRipple;\r\n\r\n    constructor(\r\n        public element: ElementRef,\r\n        public renderer: Renderer2,\r\n        private cdRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    /**\r\n     * @name select\r\n     */\r\n    public select($event?: MouseEvent): void {\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.focus();\r\n\r\n        this.onSelect.emit(this.model);\r\n    }\r\n\r\n    /**\r\n     * @name remove\r\n     */\r\n    public remove($event: MouseEvent): void {\r\n        $event.stopPropagation();\r\n        this.onRemove.emit(this);\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.element.nativeElement.focus();\r\n    }\r\n\r\n    public move(): void {\r\n        this.moving = true;\r\n    }\r\n\r\n    /**\r\n     * @name keydown\r\n     * @param event\r\n     */\r\n    @HostListener('keydown', ['$event'])\r\n    public keydown(event: EventLike): void {\r\n        if (this.editing) {\r\n            if (event.keyCode === 13) {\r\n                return this.disableEditMode(event);\r\n            }\r\n        } else {\r\n            this.onKeyDown.emit({ event, model: this.model });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name blink\r\n     */\r\n    public blink(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('blink');\r\n\r\n        setTimeout(() => classList.remove('blink'), 50);\r\n    }\r\n\r\n    /**\r\n     * @name toggleEditMode\r\n     */\r\n    public toggleEditMode(): void {\r\n        if (this.editable) {\r\n            return this.editing ? undefined : this.activateEditMode();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onBlurred\r\n     * @param event\r\n     */\r\n    public onBlurred(event: any): void {\r\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\r\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\r\n        if (!this.editable) {\r\n            return;\r\n        }\r\n\r\n        this.disableEditMode();\r\n\r\n        const value: string = event.target.innerText;\r\n        const result =\r\n            typeof this.model === 'string'\r\n                ? value\r\n                : { ...this.model, [this.displayBy]: value };\r\n\r\n        this.onBlur.emit(result);\r\n    }\r\n\r\n    /**\r\n     * @name getDisplayValue\r\n     * @param item\r\n     */\r\n    public getDisplayValue(item: TagModel): string {\r\n        return typeof item === 'string' ? item : item[this.displayBy];\r\n    }\r\n\r\n    /**\r\n     * @desc returns whether the ripple is visible or not\r\n     * only works in Chrome\r\n     * @name isRippleVisible\r\n     */\r\n    public get isRippleVisible(): boolean {\r\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\r\n    }\r\n\r\n    /**\r\n     * @name disableEditMode\r\n     * @param $event\r\n     */\r\n    public disableEditMode($event?: EventLike): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        const input = this.getContentEditableText();\r\n\r\n        this.editing = false;\r\n        classList.remove('tag--editing');\r\n\r\n        if (!input) {\r\n            this.setContentEditableText(this.model);\r\n            return;\r\n        }\r\n\r\n        this.storeNewValue(input);\r\n        this.cdRef.detectChanges();\r\n\r\n        if ($event) {\r\n            $event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name isDeleteIconVisible\r\n     */\r\n    public isDeleteIconVisible(): boolean {\r\n        return (\r\n            !this.readonly && !this.disabled && this.removable && !this.editing\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditableText\r\n     */\r\n    private getContentEditableText(): string {\r\n        const input = this.getContentEditable();\r\n\r\n        return input ? input.innerText.trim() : '';\r\n    }\r\n\r\n    /**\r\n     * @name setContentEditableText\r\n     * @param model\r\n     */\r\n    private setContentEditableText(model: TagModel) {\r\n        const input = this.getContentEditable();\r\n        const value = this.getDisplayValue(model);\r\n\r\n        input.innerText = value;\r\n    }\r\n\r\n    /**\r\n     * @name\r\n     */\r\n    private activateEditMode(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('tag--editing');\r\n\r\n        this.editing = true;\r\n    }\r\n\r\n    /**\r\n     * @name storeNewValue\r\n     * @param input\r\n     */\r\n    private storeNewValue(input: string): void {\r\n        const exists = (tag: TagModel) => {\r\n            return typeof tag === 'string'\r\n                ? tag === input\r\n                : tag[this.displayBy] === input;\r\n        };\r\n\r\n        const hasId = () => {\r\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\r\n        };\r\n\r\n        // if the value changed, replace the value in the model\r\n        if (exists(this.model)) {\r\n            return;\r\n        }\r\n\r\n        const model =\r\n            typeof this.model === 'string'\r\n                ? input\r\n                : {\r\n                      index: this.index,\r\n                      [this.identifyBy]: hasId()\r\n                          ? this.model[this.identifyBy]\r\n                          : input,\r\n                      [this.displayBy]: input\r\n                  };\r\n\r\n        if (this.canAddTag(model)) {\r\n            this.onTagEdited.emit({ tag: model, index: this.index });\r\n        } else {\r\n            this.setContentEditableText(this.model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditable\r\n     */\r\n    private getContentEditable(): HTMLInputElement {\r\n        return this.element.nativeElement.querySelector('[contenteditable]');\r\n    }\r\n}\r\n","import {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state,\r\n    AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\n/**\r\n * @name animations\r\n */\r\nexport const animations = [\r\n    trigger('animation', [\r\n        state('in', style({\r\n            opacity: 1\r\n        })),\r\n        state('out', style({\r\n            opacity: 0\r\n        })),\r\n        transition(':enter', [\r\n            animate('{{ enter }}', keyframes([\r\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\r\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\r\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\r\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\r\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\r\n            ]))\r\n        ]),\r\n        transition(':leave', [\r\n            animate('{{ leave }}', keyframes([\r\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\r\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\r\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\r\n            ]))\r\n        ])\r\n    ])\r\n];\r\n","import {\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  HostListener,\r\n  Injector,\r\n  Input,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  AfterViewInit\r\n} from '@angular/core';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\r\nimport { defaults } from '../../defaults';\r\nimport { TagModel } from '../../core/accessor';\r\nimport { TagInputComponent } from '../tag-input/tag-input';\r\n\r\n@Component({\r\n  selector: 'tag-input-dropdown',\r\n  templateUrl: './tag-input-dropdown.template.html'\r\n})\r\nexport class TagInputDropdown implements AfterViewInit {\r\n  /**\r\n   * @name dropdown\r\n   */\r\n  @ViewChild(Ng2Dropdown, { static: false }) public dropdown: Ng2Dropdown;\r\n\r\n  /**\r\n   * @name menuTemplate\r\n   * @desc reference to the template if provided by the user\r\n   */\r\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\r\n\r\n  /**\r\n   * @name offset\r\n   */\r\n  @Input() public offset: string = defaults.dropdown.offset;\r\n\r\n  /**\r\n   * @name focusFirstElement\r\n   */\r\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\r\n\r\n  /**\r\n   * - show autocomplete dropdown if the value of input is empty\r\n   * @name showDropdownIfEmpty\r\n   */\r\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\r\n\r\n  /**\r\n   * @description observable passed as input which populates the autocomplete items\r\n   * @name autocompleteObservable\r\n   */\r\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\r\n\r\n  /**\r\n   * - desc minimum text length in order to display the autocomplete dropdown\r\n   * @name minimumTextLength\r\n   */\r\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\r\n\r\n  /**\r\n   * - number of items to display in the autocomplete dropdown\r\n   * @name limitItemsTo\r\n   */\r\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\r\n\r\n  /**\r\n   * @name displayBy\r\n   */\r\n  @Input() public displayBy = defaults.dropdown.displayBy;\r\n\r\n  /**\r\n   * @name identifyBy\r\n   */\r\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\r\n\r\n  /**\r\n   * @description a function a developer can use to implement custom matching for the autocomplete\r\n   * @name matchingFn\r\n   */\r\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\r\n    defaults.dropdown.matchingFn;\r\n\r\n  /**\r\n   * @name appendToBody\r\n   */\r\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\r\n\r\n  /**\r\n   * @name keepOpen\r\n   * @description option to leave dropdown open when adding a new item\r\n   */\r\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\r\n\r\n  /**\r\n   * @name dynamicUpdate\r\n   */\r\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\r\n\r\n  /**\r\n   * @name zIndex\r\n   */\r\n  @Input() public zIndex = defaults.dropdown.zIndex;\r\n\r\n  /**\r\n   * list of items that match the current value of the input (for autocomplete)\r\n   * @name items\r\n   */\r\n  public items: TagModel[] = [];\r\n\r\n  /**\r\n   * @name tagInput\r\n   */\r\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\r\n\r\n  /**\r\n   * @name _autocompleteItems\r\n   */\r\n  private _autocompleteItems: TagModel[] = [];\r\n\r\n  /**\r\n   * @name autocompleteItems\r\n   * @param items\r\n   */\r\n  public set autocompleteItems(items: TagModel[]) {\r\n    this._autocompleteItems = items;\r\n  }\r\n\r\n  /**\r\n   * @name autocompleteItems\r\n   * @desc array of items that will populate the autocomplete\r\n   */\r\n  @Input() public get autocompleteItems(): TagModel[] {\r\n    const items = this._autocompleteItems;\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n\r\n    return items.map((item: TagModel) => {\r\n      return typeof item === 'string'\r\n        ? {\r\n            [this.displayBy]: item,\r\n            [this.identifyBy]: item\r\n          }\r\n        : item;\r\n    });\r\n  }\r\n\r\n  constructor(private readonly injector: Injector) {}\r\n\r\n  /**\r\n   * @name ngAfterviewInit\r\n   */\r\n  ngAfterViewInit(): void {\r\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\r\n      this.requestAdding(item);\r\n    });\r\n\r\n    // reset itemsMatching array when the dropdown is hidden\r\n    this.onHide().subscribe(this.resetItems);\r\n\r\n    const DEBOUNCE_TIME = 200;\r\n    const KEEP_OPEN = this.keepOpen;\r\n\r\n    this.tagInput.onTextChange\r\n      .asObservable()\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(DEBOUNCE_TIME),\r\n        filter((value: string) => {\r\n          if (KEEP_OPEN === false) {\r\n            return value.length > 0;\r\n          }\r\n\r\n          return true;\r\n        })\r\n      )\r\n      .subscribe(this.show);\r\n  }\r\n\r\n  /**\r\n   * @name updatePosition\r\n   */\r\n  public updatePosition(): void {\r\n    const position = this.tagInput.inputForm.getElementPosition();\r\n\r\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\r\n  }\r\n\r\n  /**\r\n   * @name isVisible\r\n   */\r\n  public get isVisible(): boolean {\r\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\r\n  }\r\n\r\n  /**\r\n   * @name onHide\r\n   */\r\n  public onHide(): EventEmitter<Ng2Dropdown> {\r\n    return this.dropdown.onHide;\r\n  }\r\n\r\n  /**\r\n   * @name onItemClicked\r\n   */\r\n  public onItemClicked(): EventEmitter<string> {\r\n    return this.dropdown.onItemClicked;\r\n  }\r\n\r\n  /**\r\n   * @name selectedItem\r\n   */\r\n  public get selectedItem(): Ng2MenuItem {\r\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\r\n  }\r\n\r\n  /**\r\n   * @name state\r\n   */\r\n  public get state(): any {\r\n    return this.dropdown.menu.dropdownState;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @name show\r\n   */\r\n  public show = (): void => {\r\n    const maxItemsReached =\r\n      this.tagInput.items.length === this.tagInput.maxItems;\r\n    const value = this.getFormValue();\r\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\r\n    const position = this.calculatePosition();\r\n    const items = this.getMatchingItems(value);\r\n    const hasItems = items.length > 0;\r\n    const isHidden = this.isVisible === false;\r\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\r\n    const isDisabled = this.tagInput.disable;\r\n\r\n    const shouldShow =\r\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\r\n    const shouldHide = this.isVisible && !hasItems;\r\n\r\n    if (this.autocompleteObservable && hasMinimumText) {\r\n      return this.getItemsFromObservable(value);\r\n    }\r\n\r\n    if (\r\n      (!this.showDropdownIfEmpty && !value) ||\r\n      maxItemsReached ||\r\n      isDisabled\r\n    ) {\r\n      return this.dropdown.hide();\r\n    }\r\n\r\n    this.setItems(items);\r\n\r\n    if (shouldShow) {\r\n      this.dropdown.show(position);\r\n    } else if (shouldHide) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @name hide\r\n   */\r\n  public hide(): void {\r\n    this.resetItems();\r\n    this.dropdown.hide();\r\n  }\r\n\r\n  /**\r\n   * @name scrollListener\r\n   */\r\n  @HostListener('window:scroll')\r\n  public scrollListener(): void {\r\n    if (!this.isVisible || !this.dynamicUpdate) {\r\n      return;\r\n    }\r\n\r\n    this.updatePosition();\r\n  }\r\n\r\n  /**\r\n   * @name onWindowBlur\r\n   */\r\n  @HostListener('window:blur')\r\n  public onWindowBlur(): void {\r\n    this.dropdown.hide();\r\n  }\r\n\r\n  /**\r\n   * @name getFormValue\r\n   */\r\n  private getFormValue(): string {\r\n    const formValue = this.tagInput.formValue;\r\n    return formValue ? formValue.toString().trim() : '';\r\n  }\r\n\r\n  /**\r\n   * @name calculatePosition\r\n   */\r\n  private calculatePosition(): ClientRect {\r\n    return this.tagInput.inputForm.getElementPosition();\r\n  }\r\n\r\n  /**\r\n   * @name requestAdding\r\n   * @param item {Ng2MenuItem}\r\n   */\r\n  private requestAdding = async (item: Ng2MenuItem) => {\r\n    const tag = this.createTagModel(item);\r\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\r\n  };\r\n\r\n  /**\r\n   * @name createTagModel\r\n   * @param item\r\n   */\r\n  private createTagModel(item: Ng2MenuItem): TagModel {\r\n    const display =\r\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\r\n    const value =\r\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\r\n\r\n    return {\r\n      ...item.value,\r\n      [this.tagInput.displayBy]: display,\r\n      [this.tagInput.identifyBy]: value\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param value {string}\r\n   */\r\n  private getMatchingItems(value: string): TagModel[] {\r\n    if (!value && !this.showDropdownIfEmpty) {\r\n      return [];\r\n    }\r\n\r\n    const dupesAllowed = this.tagInput.allowDupes;\r\n\r\n    return this.autocompleteItems.filter((item: TagModel) => {\r\n      const hasValue = dupesAllowed\r\n        ? false\r\n        : this.tagInput.tags.some(tag => {\r\n            const identifyBy = this.tagInput.identifyBy;\r\n            const model =\r\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\r\n\r\n            return model === item[this.identifyBy];\r\n          });\r\n\r\n      return this.matchingFn(value, item) && hasValue === false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @name setItems\r\n   */\r\n  private setItems(items: TagModel[]): void {\r\n    this.items = items.slice(0, this.limitItemsTo || items.length);\r\n  }\r\n\r\n  /**\r\n   * @name resetItems\r\n   */\r\n  private resetItems = (): void => {\r\n    this.items = [];\r\n  };\r\n\r\n  /**\r\n   * @name populateItems\r\n   * @param data\r\n   */\r\n  private populateItems(data: any): TagInputDropdown {\r\n    this.autocompleteItems = data.map(item => {\r\n      return typeof item === 'string'\r\n        ? {\r\n            [this.displayBy]: item,\r\n            [this.identifyBy]: item\r\n          }\r\n        : item;\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @name getItemsFromObservable\r\n   * @param text\r\n   */\r\n  private getItemsFromObservable = (text: string): void => {\r\n    this.setLoadingState(true);\r\n\r\n    const subscribeFn = (data: any[]) => {\r\n      // hide loading animation\r\n      this.setLoadingState(false)\r\n        // add items\r\n        .populateItems(data);\r\n\r\n      this.setItems(this.getMatchingItems(text));\r\n\r\n      if (this.items.length) {\r\n        this.dropdown.show(this.calculatePosition());\r\n      } else {\r\n        this.dropdown.hide();\r\n      }\r\n    };\r\n\r\n    this.autocompleteObservable(text)\r\n      .pipe(first())\r\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\r\n  };\r\n\r\n  /**\r\n   * @name setLoadingState\r\n   * @param state\r\n   */\r\n  private setLoadingState(state: boolean): TagInputDropdown {\r\n    this.tagInput.isLoading = state;\r\n\r\n    return this;\r\n  }\r\n}\r\n","// angular\r\nimport {\r\n    Component,\r\n    forwardRef,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Renderer2,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ContentChildren,\r\n    ContentChild,\r\n    OnInit,\r\n    TemplateRef,\r\n    QueryList,\r\n    AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n    AsyncValidatorFn,\r\n    FormControl,\r\n    NG_VALUE_ACCESSOR,\r\n    ValidatorFn\r\n} from '@angular/forms';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\r\n\r\n// ng2-tag-input\r\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\r\nimport { listen } from '../../core/helpers/listen';\r\nimport * as constants from '../../core/constants';\r\n\r\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\r\n\r\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\r\nimport { TagComponent } from '../tag/tag.component';\r\n\r\nimport { animations } from './animations';\r\nimport { defaults } from '../../defaults';\r\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\r\n\r\n// angular universal hacks\r\n/* tslint:disable-next-line */\r\nconst DragEvent = (window as any).DragEvent;\r\n\r\nconst CUSTOM_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TagInputComponent),\r\n    multi: true\r\n};\r\n@Component({\r\n    selector: 'tag-input',\r\n    providers: [CUSTOM_ACCESSOR],\r\n    styleUrls: ['./tag-input.style.scss'],\r\n    templateUrl: './tag-input.template.html',\r\n    animations\r\n})\r\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\r\n    /**\r\n     * @name separatorKeys\r\n     * @desc keyboard keys with which a user can separate items\r\n     */\r\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\r\n\r\n    /**\r\n     * @name separatorKeyCodes\r\n     * @desc keyboard key codes with which a user can separate items\r\n     */\r\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\r\n\r\n    /**\r\n     * @name placeholder\r\n     * @desc the placeholder of the input text\r\n     */\r\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\r\n\r\n    /**\r\n     * @name secondaryPlaceholder\r\n     * @desc placeholder to appear when the input is empty\r\n     */\r\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\r\n\r\n    /**\r\n     * @name maxItems\r\n     * @desc maximum number of items that can be added\r\n     */\r\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\r\n\r\n    /**\r\n     * @name validators\r\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\r\n\r\n    /**\r\n    * - if set to true, it will only possible to add items from the autocomplete\r\n    * @name onlyFromAutocomplete\r\n    */\r\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\r\n\r\n    /**\r\n     * @name errorMessages\r\n     */\r\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\r\n\r\n    /**\r\n     * @name theme\r\n     */\r\n    @Input() public theme: string = defaults.tagInput.theme;\r\n\r\n    /**\r\n     * @name onTextChangeDebounce\r\n     */\r\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\r\n\r\n    /**\r\n     * - custom id assigned to the input\r\n     * @name id\r\n     */\r\n    @Input() public inputId = defaults.tagInput.inputId;\r\n\r\n    /**\r\n     * - custom class assigned to the input\r\n     */\r\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\r\n\r\n    /**\r\n     * - option to clear text input when the form is blurred\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\r\n\r\n    /**\r\n     * - hideForm\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\r\n\r\n    /**\r\n     * @name addOnBlur\r\n     */\r\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\r\n\r\n    /**\r\n     * @name addOnPaste\r\n     */\r\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\r\n\r\n    /**\r\n     * - pattern used with the native method split() to separate patterns in the string pasted\r\n     * @name pasteSplitPattern\r\n     */\r\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\r\n\r\n    /**\r\n     * @name blinkIfDupe\r\n     */\r\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\r\n\r\n    /**\r\n     * @name removable\r\n     */\r\n    @Input() public removable = defaults.tagInput.removable;\r\n\r\n    /**\r\n     * @name editable\r\n     */\r\n    @Input() public editable: boolean = defaults.tagInput.editable;\r\n\r\n    /**\r\n     * @name allowDupes\r\n     */\r\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\r\n\r\n    /**\r\n     * @description if set to true, the newly added tags will be added as strings, and not objects\r\n     * @name modelAsStrings\r\n     */\r\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\r\n\r\n    /**\r\n     * @name trimTags\r\n     */\r\n    @Input() public trimTags = defaults.tagInput.trimTags;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input() public get inputText(): string {\r\n        return this.inputTextValue;\r\n    }\r\n\r\n    /**\r\n     * @name ripple\r\n     */\r\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     */\r\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\r\n\r\n    /**\r\n     * @name disable\r\n     */\r\n    @Input() public disable: boolean = defaults.tagInput.disable;\r\n\r\n    /**\r\n     * @name dragZone\r\n     */\r\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\r\n\r\n    /**\r\n     * @name onRemoving\r\n     */\r\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\r\n\r\n    /**\r\n     * @name onAdding\r\n     */\r\n    @Input() public onAdding = defaults.tagInput.onAdding;\r\n\r\n    /**\r\n     * @name animationDuration\r\n     */\r\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\r\n\r\n    /**\r\n     * @name onAdd\r\n     * @desc event emitted when adding a new item\r\n     */\r\n    @Output() public onAdd = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     * @desc event emitted when removing an existing item\r\n     */\r\n    @Output() public onRemove = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onSelect\r\n     * @desc event emitted when selecting an item\r\n     */\r\n    @Output() public onSelect = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is focused\r\n     */\r\n    @Output() public onFocus = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is blurred\r\n     */\r\n    @Output() public onBlur = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onTextChange\r\n     * @desc event emitted when the input value changes\r\n     */\r\n    @Output() public onTextChange = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when text is pasted in the form\r\n     * @name onPaste\r\n     */\r\n    @Output() public onPaste = new EventEmitter<string>();\r\n\r\n    /**\r\n     * - output triggered when tag entered is not valid\r\n     * @name onValidationError\r\n     */\r\n    @Output() public onValidationError = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when tag is edited\r\n     * @name onTagEdited\r\n     */\r\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name dropdown\r\n     */\r\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\r\n    @ContentChild(TagInputDropdown, { static: false }) public dropdown: TagInputDropdown;\r\n    /**\r\n     * @name template\r\n     * @desc reference to the template if provided by the user\r\n     */\r\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\r\n\r\n    /**\r\n     * @name inputForm\r\n     */\r\n    @ViewChild(TagInputForm, { static: false }) public inputForm: TagInputForm;\r\n\r\n    /**\r\n     * @name selectedTag\r\n     * @desc reference to the current selected tag\r\n     */\r\n    public selectedTag: TagModel | undefined;\r\n\r\n    /**\r\n     * @name isLoading\r\n     */\r\n    public isLoading = false;\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text\r\n     */\r\n    public set inputText(text: string) {\r\n        this.inputTextValue = text;\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    /**\r\n     * @name tags\r\n     * @desc list of Element items\r\n     */\r\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\r\n\r\n    /**\r\n     * @name listeners\r\n     * @desc array of events that get fired using @fireEvents\r\n     */\r\n    private listeners = {\r\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\r\n        [constants.KEYUP]: <{ (fun): any }[]>[]\r\n    };\r\n\r\n    /**\r\n     * @description emitter for the 2-way data binding inputText value\r\n     * @name inputTextChange\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * @description private variable to bind get/set\r\n     * @name inputTextValue\r\n     */\r\n    public inputTextValue = '';\r\n\r\n    /**\r\n     * @desc removes the tab index if it is set - it will be passed through to the input\r\n     * @name tabindexAttr\r\n     */\r\n    @HostBinding('attr.tabindex')\r\n    public get tabindexAttr(): string {\r\n        return this.tabindex !== '' ? '-1' : '';\r\n    }\r\n\r\n    /**\r\n     * @name animationMetadata\r\n     */\r\n    public animationMetadata: { value: string, params: object };\r\n\r\n    public errors: string[] = [];\r\n\r\n    public isProgressBarVisible$: Observable<boolean>;\r\n\r\n    constructor(private readonly renderer: Renderer2,\r\n        public readonly dragProvider: DragProvider) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @name ngAfterViewInit\r\n     */\r\n    public ngAfterViewInit(): void {\r\n        // set up listeners\r\n\r\n        this.setUpKeypressListeners();\r\n        this.setupSeparatorKeysListener();\r\n        this.setUpInputKeydownListeners();\r\n\r\n        if (this.onTextChange.observers.length) {\r\n            this.setUpTextChangeSubscriber();\r\n        }\r\n\r\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\r\n        if (this.clearOnBlur || this.addOnBlur) {\r\n            this.setUpOnBlurSubscriber();\r\n        }\r\n\r\n        // if addOnPaste is set to true, register the handler and add items\r\n        if (this.addOnPaste) {\r\n            this.setUpOnPasteListener();\r\n        }\r\n\r\n        const statusChanges$ = this.inputForm.form.statusChanges;\r\n\r\n        statusChanges$.pipe(\r\n            filter((status: string) => status !== 'PENDING')\r\n        ).subscribe(() => {\r\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\r\n        });\r\n\r\n        this.isProgressBarVisible$ = statusChanges$.pipe(\r\n            map((status: string) => {\r\n                return status === 'PENDING' || this.isLoading;\r\n            })\r\n        );\r\n\r\n        // if hideForm is set to true, remove the input\r\n        if (this.hideForm) {\r\n            this.inputForm.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name ngOnInit\r\n     */\r\n    public ngOnInit(): void {\r\n        // if the number of items specified in the model is > of the value of maxItems\r\n        // degrade gracefully and let the max number of items to be the number of items in the model\r\n        // though, warn the user.\r\n        const hasReachedMaxItems = this.maxItems !== undefined &&\r\n            this.items &&\r\n            this.items.length > this.maxItems;\r\n\r\n        if (hasReachedMaxItems) {\r\n            this.maxItems = this.items.length;\r\n            console.warn(constants.MAX_ITEMS_WARNING);\r\n        }\r\n\r\n        // Setting editable to false to fix problem with tags in IE still being editable when\r\n        // onlyFromAutocomplete is true\r\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\r\n\r\n        this.setAnimationMetadata();\r\n    }\r\n\r\n    /**\r\n     * @name onRemoveRequested\r\n     * @param tag\r\n     * @param index\r\n     */\r\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\r\n        return new Promise(resolve => {\r\n            const subscribeFn = (model: TagModel) => {\r\n                this.removeItem(model, index);\r\n                resolve(tag);\r\n            };\r\n\r\n            this.onRemoving ?\r\n                this.onRemoving(tag)\r\n                    .pipe(first())\r\n                    .subscribe(subscribeFn) : subscribeFn(tag);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name onAddingRequested\r\n     * @param fromAutocomplete {boolean}\r\n     * @param tag {TagModel}\r\n     * @param index? {number}\r\n     * @param giveupFocus? {boolean}\r\n     */\r\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\r\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\r\n        return new Promise((resolve, reject) => {\r\n            const subscribeFn = (model: TagModel) => {\r\n                return this\r\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\r\n                    .then(resolve)\r\n                    .catch(reject);\r\n            };\r\n\r\n            return this.onAdding ?\r\n                this.onAdding(tag)\r\n                    .pipe(first())\r\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name appendTag\r\n     * @param tag {TagModel}\r\n     */\r\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\r\n        const items = this.items;\r\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\r\n\r\n        this.items = [\r\n            ...items.slice(0, index),\r\n            model,\r\n            ...items.slice(index, items.length)\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @name createTag\r\n     * @param model\r\n     */\r\n    public createTag = (model: TagModel): TagModel => {\r\n        const trim = (val: TagModel, key: string): TagModel => {\r\n            return typeof val === 'string' ? val.trim() : val[key];\r\n        };\r\n\r\n        return {\r\n            ...typeof model !== 'string' ? model : {},\r\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\r\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @name selectItem\r\n     * @desc selects item passed as parameter as the selected tag\r\n     * @param item\r\n     * @param emit\r\n     */\r\n    public selectItem(item: TagModel | undefined, emit = true): void {\r\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\r\n\r\n        if (isReadonly || this.selectedTag === item) {\r\n            return;\r\n        }\r\n\r\n        this.selectedTag = item;\r\n\r\n        if (emit) {\r\n            this.onSelect.emit(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name fireEvents\r\n     * @desc goes through the list of the events for a given eventName, and fires each of them\r\n     * @param eventName\r\n     * @param $event\r\n     */\r\n    public fireEvents(eventName: string, $event?): void {\r\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\r\n    }\r\n\r\n    /**\r\n     * @name handleKeydown\r\n     * @desc handles action when the user hits a keyboard key\r\n     * @param data\r\n     */\r\n    public handleKeydown(data: any): void {\r\n        const event = data.event;\r\n        const key = event.keyCode || event.which;\r\n        const shiftKey = event.shiftKey || false;\r\n\r\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\r\n            case constants.ACTIONS_KEYS.DELETE:\r\n                if (this.selectedTag && this.removable) {\r\n                    const index = this.items.indexOf(this.selectedTag);\r\n                    this.onRemoveRequested(this.selectedTag, index);\r\n                }\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\r\n                this.moveToTag(data.model, constants.PREV);\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\r\n                this.moveToTag(data.model, constants.NEXT);\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.TAB:\r\n                if (shiftKey) {\r\n                    if (this.isFirstTag(data.model)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.moveToTag(data.model, constants.PREV);\r\n                } else {\r\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.moveToTag(data.model, constants.NEXT);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n        // prevent default behaviour\r\n        event.preventDefault();\r\n    }\r\n\r\n    public async onFormSubmit() {\r\n        try {\r\n            await this.onAddingRequested(false, this.formValue);\r\n        } catch {\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name setInputValue\r\n     * @param value\r\n     */\r\n    public setInputValue(value: string, emitEvent = true): void {\r\n        const control = this.getControl();\r\n\r\n        // update form value with the transformed item\r\n        control.setValue(value, { emitEvent });\r\n    }\r\n\r\n    /**\r\n     * @name getControl\r\n     */\r\n    private getControl(): FormControl {\r\n        return this.inputForm.value as FormControl;\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     * @param applyFocus\r\n     * @param displayAutocomplete\r\n     */\r\n    public focus(applyFocus = false, displayAutocomplete = false): void {\r\n        if (this.dragProvider.getState('dragging')) {\r\n            return;\r\n        }\r\n\r\n        this.selectItem(undefined, false);\r\n\r\n        if (applyFocus) {\r\n            this.inputForm.focus();\r\n            this.onFocus.emit(this.formValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.onTouched();\r\n\r\n        this.onBlur.emit(this.formValue);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     */\r\n    public hasErrors(): boolean {\r\n        return !!this.inputForm && !!this.inputForm.hasErrors();\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     */\r\n    public isInputFocused(): boolean {\r\n        return !!this.inputForm && this.inputForm.isInputFocused();\r\n    }\r\n\r\n    /**\r\n     * - this is the one way I found to tell if the template has been passed and it is not\r\n     * the template for the menu item\r\n     * @name hasCustomTemplate\r\n     */\r\n    public hasCustomTemplate(): boolean {\r\n        const template = this.templates ? this.templates.first : undefined;\r\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\r\n            this.dropdown.templates.first : undefined;\r\n\r\n        return Boolean(template && template !== menuTemplate);\r\n    }\r\n\r\n    /**\r\n     * @name maxItemsReached\r\n     */\r\n    public get maxItemsReached(): boolean {\r\n        return this.maxItems !== undefined &&\r\n            this.items.length >= this.maxItems;\r\n    }\r\n\r\n    /**\r\n     * @name formValue\r\n     */\r\n    public get formValue(): string {\r\n        const form = this.inputForm.value;\r\n\r\n        return form ? form.value : '';\r\n    }\r\n\r\n    /**3\r\n     * @name onDragStarted\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\r\n        event.stopPropagation();\r\n\r\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\r\n\r\n        this.dragProvider.setSender(this);\r\n        this.dragProvider.setDraggedItem(event, item);\r\n        this.dragProvider.setState({ dragging: true, index });\r\n    }\r\n\r\n    /**\r\n     * @name onDragOver\r\n     * @param event\r\n     */\r\n    public onDragOver(event: DragEvent, index?: number): void {\r\n        this.dragProvider.setState({ dropping: true });\r\n        this.dragProvider.setReceiver(this);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onTagDropped(event: DragEvent, index?: number): void {\r\n        const item = this.dragProvider.getDraggedItem(event);\r\n\r\n        if (!item || item.zone !== this.dragZone) {\r\n            return;\r\n        }\r\n\r\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @name isDropping\r\n     */\r\n    public isDropping(): boolean {\r\n        const isReceiver = this.dragProvider.receiver === this;\r\n        const isDropping = this.dragProvider.getState('dropping');\r\n\r\n        return Boolean(isReceiver && isDropping);\r\n    }\r\n\r\n    /**\r\n     * @name onTagBlurred\r\n     * @param changedElement {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public onTagBlurred(changedElement: TagModel, index: number): void {\r\n        this.items[index] = changedElement;\r\n        this.blur();\r\n    }\r\n\r\n    /**\r\n     * @name trackBy\r\n     * @param items\r\n     */\r\n    public trackBy(index: number, item: TagModel): string {\r\n        return item[this.identifyBy];\r\n    }\r\n\r\n    /**\r\n     * @name updateEditedTag\r\n     * @param tag\r\n     */\r\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\r\n        this.onTagEdited.emit(tag);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\r\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\r\n        const value = this.getItemDisplay(tag).trim();\r\n\r\n        if (selectedItem && !fromAutocomplete || !value) {\r\n            return false;\r\n        }\r\n\r\n        const dupe = this.findDupe(tag, fromAutocomplete);\r\n\r\n        // if so, give a visual cue and return false\r\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\r\n            const model = this.tags.find(item => {\r\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\r\n            });\r\n\r\n            if (model) {\r\n                model.blink();\r\n            }\r\n        }\r\n\r\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\r\n\r\n        const assertions = [\r\n            // 1. there must be no dupe OR dupes are allowed\r\n            !dupe || this.allowDupes,\r\n\r\n            // 2. check max items has not been reached\r\n            !this.maxItemsReached,\r\n\r\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\r\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\r\n        ];\r\n\r\n        return assertions.filter(Boolean).length === assertions.length;\r\n    }\r\n\r\n    /**\r\n     * @name moveToTag\r\n     * @param item\r\n     * @param direction\r\n     */\r\n    private moveToTag(item: TagModel, direction: string): void {\r\n        const isLast = this.isLastTag(item);\r\n        const isFirst = this.isFirstTag(item);\r\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\r\n            (direction === constants.PREV && isFirst);\r\n\r\n        if (stopSwitch) {\r\n            this.focus(true);\r\n            return;\r\n        }\r\n\r\n        const offset = direction === constants.NEXT ? 1 : -1;\r\n        const index = this.getTagIndex(item) + offset;\r\n        const tag = this.getTagAtIndex(index);\r\n\r\n        return tag.select.call(tag);\r\n    }\r\n\r\n    /**\r\n     * @name isFirstTag\r\n     * @param item {TagModel}\r\n     */\r\n    private isFirstTag(item: TagModel): boolean {\r\n        return this.tags.first.model === item;\r\n    }\r\n\r\n    /**\r\n     * @name isLastTag\r\n     * @param item {TagModel}\r\n     */\r\n    private isLastTag(item: TagModel): boolean {\r\n        return this.tags.last.model === item;\r\n    }\r\n\r\n    /**\r\n     * @name getTagIndex\r\n     * @param item\r\n     */\r\n    private getTagIndex(item: TagModel): number {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags.findIndex(tag => tag.model === item);\r\n    }\r\n\r\n    /**\r\n     * @name getTagAtIndex\r\n     * @param index\r\n     */\r\n    private getTagAtIndex(index: number) {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags[index];\r\n    }\r\n\r\n    /**\r\n     * @name removeItem\r\n     * @desc removes an item from the array of the model\r\n     * @param tag {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public removeItem(tag: TagModel, index: number): void {\r\n        this.items = this.getItemsWithout(index);\r\n\r\n        // if the removed tag was selected, set it as undefined\r\n        if (this.selectedTag === tag) {\r\n            this.selectItem(undefined, false);\r\n        }\r\n\r\n        // focus input\r\n        this.focus(true, false);\r\n\r\n        // emit remove event\r\n        this.onRemove.emit(tag);\r\n    }\r\n\r\n    /**\r\n     * @name addItem\r\n     * @desc adds the current text model to the items array\r\n     * @param fromAutocomplete {boolean}\r\n     * @param item {TagModel}\r\n     * @param index? {number}\r\n     * @param giveupFocus? {boolean}\r\n     */\r\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\r\n        Promise<TagModel> {\r\n        const display = this.getItemDisplay(item);\r\n        const tag = this.createTag(item);\r\n\r\n        if (fromAutocomplete) {\r\n            this.setInputValue(this.getItemValue(item, true));\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * @name reset\r\n             */\r\n            const reset = (): void => {\r\n                // reset control and focus input\r\n                this.setInputValue('');\r\n\r\n                if (giveupFocus) {\r\n                    this.focus(false, false);\r\n                } else {\r\n                    // focus input\r\n                    this.focus(true, false);\r\n                }\r\n\r\n                resolve(display);\r\n            };\r\n\r\n            const appendItem = (): void => {\r\n                this.appendTag(tag, index);\r\n\r\n                // emit event\r\n                this.onAdd.emit(tag);\r\n\r\n                if (!this.dropdown) {\r\n                    return;\r\n                }\r\n\r\n                this.dropdown.hide();\r\n\r\n                if (this.dropdown.showDropdownIfEmpty) {\r\n                    this.dropdown.show();\r\n                }\r\n            };\r\n\r\n            const status = this.inputForm.form.status;\r\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\r\n\r\n            const onValidationError = () => {\r\n                this.onValidationError.emit(tag);\r\n                return reject();\r\n            };\r\n\r\n            if (status === 'VALID' && isTagValid) {\r\n                appendItem();\r\n                return reset();\r\n            }\r\n\r\n            if (status === 'INVALID' || !isTagValid) {\r\n                reset();\r\n                return onValidationError();\r\n            }\r\n\r\n            if (status === 'PENDING') {\r\n                const statusUpdate$ = this.inputForm.form.statusChanges;\r\n\r\n                return statusUpdate$\r\n                    .pipe(\r\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\r\n                        first()\r\n                    )\r\n                    .subscribe((statusUpdate) => {\r\n                        if (statusUpdate === 'VALID' && isTagValid) {\r\n                            appendItem();\r\n                            return reset();\r\n                        } else {\r\n                            reset();\r\n                            return onValidationError();\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setupSeparatorKeysListener\r\n     */\r\n    private setupSeparatorKeysListener(): void {\r\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\r\n        const listener = ($event) => {\r\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\r\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\r\n            // the keyCode of keydown event is 229 when IME is processing the key event.\r\n            const isIMEProcessing = $event.keyCode === 229;\r\n\r\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\r\n                $event.preventDefault();\r\n                this.onAddingRequested(false, this.formValue)\r\n                    .catch(() => { });\r\n            }\r\n        };\r\n\r\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeypressListeners\r\n     */\r\n    private setUpKeypressListeners(): void {\r\n        const listener = ($event) => {\r\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\r\n\r\n            if (isCorrectKey &&\r\n                !this.formValue &&\r\n                this.items.length) {\r\n                this.tags.last.select.call(this.tags.last);\r\n            }\r\n        };\r\n\r\n        // setting up the keypress listeners\r\n        listen.call(this, constants.KEYDOWN, listener);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeydownListeners\r\n     */\r\n    private setUpInputKeydownListeners(): void {\r\n        this.inputForm.onKeydown.subscribe(event => {\r\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnPasteListener\r\n     */\r\n    private setUpOnPasteListener() {\r\n        const input = this.inputForm.input.nativeElement;\r\n\r\n        // attach listener to input\r\n        this.renderer.listen(input, 'paste', (event) => {\r\n            this.onPasteCallback(event);\r\n\r\n            event.preventDefault();\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpTextChangeSubscriber\r\n     */\r\n    private setUpTextChangeSubscriber(): void {\r\n        this.inputForm.form\r\n            .valueChanges\r\n            .pipe(\r\n                debounceTime(this.onTextChangeDebounce)\r\n            )\r\n            .subscribe((value: { item: string }) => {\r\n                this.onTextChange.emit(value.item);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnBlurSubscriber\r\n     */\r\n    private setUpOnBlurSubscriber(): void {\r\n        const filterFn = (): boolean => {\r\n            const isVisible = this.dropdown && this.dropdown.isVisible;\r\n            return !isVisible && !!this.formValue;\r\n        };\r\n\r\n        this.inputForm\r\n            .onBlur\r\n            .pipe(\r\n                debounceTime(100),\r\n                filter(filterFn)\r\n            )\r\n            .subscribe(() => {\r\n                const reset = () => this.setInputValue('');\r\n\r\n                if (this.addOnBlur) {\r\n                    return this\r\n                        .onAddingRequested(false, this.formValue, undefined, true)\r\n                        .then(reset)\r\n                        .catch(reset);\r\n                }\r\n\r\n                reset();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name findDupe\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\r\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\r\n        const id = tag[identifyBy];\r\n\r\n        return this.items.find(item => this.getItemValue(item) === id);\r\n    }\r\n\r\n    /**\r\n     * @name onPasteCallback\r\n     * @param data\r\n     */\r\n    private onPasteCallback = async (data: ClipboardEvent) => {\r\n        interface IEWindow extends Window {\r\n            clipboardData: DataTransfer;\r\n        }\r\n\r\n        const getText = (): string => {\r\n            const isIE = Boolean((window as IEWindow).clipboardData);\r\n            const clipboardData = isIE ? (\r\n                (window as IEWindow).clipboardData\r\n            ) : data.clipboardData;\r\n            const type = isIE ? 'Text' : 'text/plain';\r\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\r\n        };\r\n\r\n        const text = getText();\r\n\r\n        const requests = text\r\n            .split(this.pasteSplitPattern)\r\n            .map(item => {\r\n                const tag = this.createTag(item);\r\n                this.setInputValue(tag[this.displayBy]);\r\n                return this.onAddingRequested(false, tag);\r\n            });\r\n\r\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\r\n\r\n        Promise.all(requests).then(() => {\r\n            this.onPaste.emit(text);\r\n            resetInput();\r\n        })\r\n            .catch(resetInput);\r\n    }\r\n\r\n    /**\r\n     * @name setAnimationMetadata\r\n     */\r\n    private setAnimationMetadata(): void {\r\n        this.animationMetadata = {\r\n            value: 'in',\r\n            params: { ...this.animationDuration }\r\n        };\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'delete-icon',\r\n    templateUrl: './icon.html',\r\n    styleUrls: ['./icon.scss']\r\n})\r\nexport class DeleteIconComponent {}\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\r\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\r\nimport { DragProvider } from './core/providers/drag-provider';\r\nimport { OptionsProvider, Options } from './core/providers/options-provider';\r\nimport { TagInputComponent } from './components/tag-input/tag-input';\r\nimport { DeleteIconComponent } from './components/icon/icon';\r\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\r\nimport { TagComponent } from './components/tag/tag.component';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagRipple } from './components/tag/tag-ripple.component';\r\n\r\nconst optionsProvider = new OptionsProvider();\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        Ng2DropdownModule\r\n    ],\r\n    declarations: [\r\n        TagInputComponent,\r\n        DeleteIconComponent,\r\n        TagInputForm,\r\n        TagComponent,\r\n        HighlightPipe,\r\n        TagInputDropdown,\r\n        TagRipple\r\n    ],\r\n    exports: [\r\n        TagInputComponent,\r\n        DeleteIconComponent,\r\n        TagInputForm,\r\n        TagComponent,\r\n        HighlightPipe,\r\n        TagInputDropdown,\r\n        TagRipple\r\n    ],\r\n    providers: [\r\n        DragProvider,\r\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\r\n    ]\r\n})\r\nexport class TagInputModule {\r\n    /**\r\n     * @name withDefaults\r\n     * @param options {Options}\r\n     */\r\n    public static withDefaults(options: Options): void {\r\n        optionsProvider.setOptions(options);\r\n    }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {animations as Éµb} from './components/tag-input/animations';\nexport {TagInputAccessor as Éµa} from './core/accessor';\nexport {HighlightPipe as Éµd} from './core/pipes/highlight.pipe';\nexport {DragProvider as Éµc} from './core/providers/drag-provider';"],"names":["tslib_1.__decorate","tslib_1.__extends","constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT"],"mappings":"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"}